name: Deploy Pipeline

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'develop'
      environment:
        description: 'Select the environment'
        required: true
        type: choice
        options:
          - rmse-dev
          - rmse-qa
          - rmse-prod

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Build Application
        run: |
          echo "Building application for ${{ github.event.inputs.environment }} environment"
          # Add your actual build commands here (e.g., npm install, mvn package, etc.)
          echo "Build completed"

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Run Tests
        run: |
          echo "Running tests for ${{ github.event.inputs.environment }} environment"
          # Add your actual test commands here (e.g., npm test, pytest, etc.)
          echo "Tests completed"
        continue-on-error: false
        
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Set VM IP Address
        run: |
          if [[ "${{ github.event.inputs.environment }}" == "rmse-dev" ]]; then
            echo "VM_IP=128.2.1.2" >> $GITHUB_ENV
          elif [[ "${{ github.event.inputs.environment }}" == "rmse-qa" ]]; then
            echo "VM_IP=128.2.1.3" >> $GITHUB_ENV
          elif [[ "${{ github.event.inputs.environment }}" == "rmse-prod" ]]; then
            echo "VM_IP=128.2.1.4" >> $GITHUB_ENV
          fi

      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Deploy to ${{ github.event.inputs.environment }} Environment
        run: |
          echo "Deploying to ${{ github.event.inputs.environment }} Environment..."
          echo "Connecting to VM with IP: $VM_IP"
          echo "VM IP Address is: $VM_IP"
